diff --git a/node_modules/@bitquery/graph/src/index.js b/node_modules/@bitquery/graph/src/index.js
index ca7dd5a..9fed3e5 100644
--- a/node_modules/@bitquery/graph/src/index.js
+++ b/node_modules/@bitquery/graph/src/index.js
@@ -2,7 +2,6 @@ import _ from 'lodash'
 import _n from 'numeral'
 import { setNumeralLocale } from './util/setNumeralLocale'
 
-import { Network, DataSet, nl_NL } from '../node_modules/vis'
 import { addInitializingLoader } from './addInitializingLoader'
 import { CurrencyFilter } from './components/CurrencyFilter'
 import { CurrencyFilterOption } from './components/CurrencyFilterOption'
@@ -14,14 +13,17 @@ import { lightenOrDarkenColor } from './util/lightenOrDarkenColor'
 import { addModalJS } from './addModalJS'
 import { addModalGraphQL } from './addModalGraphQL'
 
+import $ from 'jquery'
+import { Network, DataSet, nl_NL } from 'vis'
 import * as d3 from 'd3'
-// import * as d3Sankey from 'd3-sankey-circular'
-import * as d3Sankey from '../../d3-sankey-circular/dist/d3-sankey-circular'
+import * as d3Sankey from '../../../d3-sankey-circular'
 import * as d3PathArrows from 'd3-path-arrows'
 import uid from './util/uid'
 
 import './style.scss'
 
+window.$ = $
+
 setNumeralLocale(_n)
 
 export function query(query) {
@@ -51,11 +53,13 @@ export function query(query) {
         this.addLoader()
       }
 
-      fetch(this.url, {
+
+      return fetch(this.url, {
         method: 'POST',
         headers: {
           'Content-Type': 'application/json',
           Accept: 'application/json',
+          'X-API-KEY': 'BQYO4oNmKcSgqlcTCAAxDh4C665PVCBH'
         },
         body: JSON.stringify({
           query: this.query,
@@ -77,7 +81,8 @@ export function query(query) {
             this.loading = false
             this.removeLoader()
           }
-          this.setData(data['data'], isExpand)
+          this.setData(data.data, isExpand)
+          return data
         })
     },
 
@@ -894,6 +899,7 @@ export function address_sankey(selector, query, options) {
 
     const graph = sankey(data)
     const rootNode = _.find(graph.nodes, { id: query.variables.address })
+    if(!rootNode) return
 
     function getAllPaths(graph) {
       const rootNode = _.find(graph.nodes, { id: query.variables.address })
